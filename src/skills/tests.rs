#[cfg(test)]
mod tests {
    use crate::skills::*;

    #[test]
    fn test_parse_and_write() {
        let byte_vector = [
            0x69, 0x66, 0x00, 0x01, 0x00, 0x14, 0x01, 0x00, 0x01, 0x01, 0x01, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x14,
        ];

        let skills = parse(&byte_vector).unwrap();
        // Teleport
        assert!(skills.0[18].points == 1);

        let result = skills.write();

        assert_eq!(result, byte_vector);
    }

    #[test]
    fn test_parse() {
        let byte_vector = [
            0x69, 0x66, 0x00, 0x01, 0x00, 0x14, 0x01, 0x00, 0x01, 0x01, 0x01, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x14,
        ];

        let skills = parse(&byte_vector).unwrap();
        // Ice blast
        assert!(skills.0[9].points == 17);

    }
}
